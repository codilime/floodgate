{
  "basePath": "/",
  "definitions": {
    "Account": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
               "additionalProperties" : {
                 "items": {
                   "type": "string"
                 },
                 "type": "array"
               },
          "type": "object"
        },
        "requiredGroupMembership": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "Account",
      "type": "object"
    },
    "AccountDetails": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "challengeDestructiveActions": {
          "type": "boolean"
        },
        "cloudProvider": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object"
        },
        "primaryAccount": {
          "type": "boolean"
        },
        "requiredGroupMembership": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "AccountDetails",
      "type": "object"
    },
    "ConstraintState": {
      "properties": {
        "artifactVersion": {
          "type": "string"
        },
        "attributes": {
          "type": "object"
        },
        "comment": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "deliveryConfigName": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "judgedAt": {
          "type": "string"
        },
        "judgedBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "ConstraintState",
      "type": "object"
    },
    "ConstraintStatus": {
      "properties": {
        "artifactVersion": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "ConstraintStatus",
      "type": "object"
    },
    "DeckPluginVersion": {
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "version"
      ],
      "title": "DeckPluginVersion",
      "type": "object"
    },
    "DeliveryConfig": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "application": {
          "type": "string"
        },
        "artifacts": {
          "items": {
            "$ref": "#/definitions/MapÂ«string,objectÂ»"
          },
          "type": "array"
        },
        "environments": {
          "items": {
            "$ref": "#/definitions/Environment"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "serviceAccount": {
          "type": "string"
        }
      },
      "title": "DeliveryConfig",
      "type": "object"
    },
    "Environment": {
      "properties": {
        "constraints": {
          "items": {
            "$ref": "#/definitions/MapÂ«string,objectÂ»"
          },
          "type": "array"
        },
        "locations": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "notifications": {
          "items": {
            "$ref": "#/definitions/Notification"
          },
          "type": "array"
        },
        "resources": {
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "type": "array"
        }
      },
      "title": "Environment",
      "type": "object"
    },
    "EnvironmentArtifactPin": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "pinnedBy": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "targetEnvironment": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "EnvironmentArtifactPin",
      "type": "object"
    },
    "EnvironmentArtifactVeto": {
      "properties": {
        "comment": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "targetEnvironment": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "EnvironmentArtifactVeto",
      "type": "object"
    },
    "File": {
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absoluteFile": {
          "$ref": "#/definitions/File"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalFile": {
          "$ref": "#/definitions/File"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "executable": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "format": "int64",
          "type": "integer"
        },
        "hidden": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "parentFile": {
          "$ref": "#/definitions/File"
        },
        "path": {
          "type": "string"
        },
        "readable": {
          "type": "boolean"
        },
        "totalSpace": {
          "format": "int64",
          "type": "integer"
        },
        "usableSpace": {
          "format": "int64",
          "type": "integer"
        },
        "writable": {
          "type": "boolean"
        }
      },
      "title": "File",
      "type": "object"
    },
    "GrantedAuthority": {
      "properties": {
        "authority": {
          "type": "string"
        }
      },
      "title": "GrantedAuthority",
      "type": "object"
    },
    "HashMapÂ«string,objectÂ»": {
      "additionalProperties": {
        "type": "object"
      },
      "title": "HashMapÂ«string,objectÂ»",
      "type": "object"
    },
    "HttpEntity": {
      "properties": {
        "body": {
          "type": "object"
        }
      },
      "title": "HttpEntity",
      "type": "object"
    },
    "InputStream": {
      "title": "InputStream",
      "type": "object"
    },
    "MapÂ«string,objectÂ»": {
      "additionalProperties": {
        "type": "object"
      },
      "title": "MapÂ«string,objectÂ»",
      "type": "object"
    },
    "MapÂ«string,stringÂ»": {
      "additionalProperties": {
        "type": "string"
      },
      "title": "MapÂ«string,stringÂ»",
      "type": "object"
    },
    "Notification": {
      "properties": {
        "address": {
          "type": "string"
        },
        "frequency": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "Notification",
      "type": "object"
    },
    "PipelineTemplateDependent": {
      "properties": {
        "application": {
          "type": "string"
        },
        "pipelineConfigId": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        }
      },
      "title": "PipelineTemplateDependent",
      "type": "object"
    },
    "PluginDependency": {
      "properties": {
        "optional": {
          "type": "boolean"
        },
        "pluginId": {
          "type": "string"
        },
        "pluginVersionSupport": {
          "type": "string"
        }
      },
      "title": "PluginDependency",
      "type": "object"
    },
    "ReorderPipelinesCommand": {
      "properties": {
        "application": {
          "type": "string"
        },
        "idsToIndices": {
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
               "type" : "object"
            }
         },
         "title" : "ReorderPipelinesCommand",
         "type" : "object"
      },
    "Resource": {
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/File"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      },
      "title": "Resource",
      "type": "object"
    },
      "ResponseEntity" : {
         "properties" : {
           "body": {
             "type": "object"
           },
           "statusCode": {
             "enum": [
               "100 CONTINUE",
               "101 SWITCHING_PROTOCOLS",
               "102 PROCESSING",
               "103 CHECKPOINT",
               "200 OK",
               "201 CREATED",
               "202 ACCEPTED",
               "203 NON_AUTHORITATIVE_INFORMATION",
                  "204 NO_CONTENT",
                  "205 RESET_CONTENT",
                  "206 PARTIAL_CONTENT",
                  "207 MULTI_STATUS",
                  "208 ALREADY_REPORTED",
                  "226 IM_USED",
                  "300 MULTIPLE_CHOICES",
                  "301 MOVED_PERMANENTLY",
                  "302 FOUND",
                  "302 MOVED_TEMPORARILY",
                  "303 SEE_OTHER",
                  "304 NOT_MODIFIED",
                  "305 USE_PROXY",
                  "307 TEMPORARY_REDIRECT",
                  "308 PERMANENT_REDIRECT",
                  "400 BAD_REQUEST",
                  "401 UNAUTHORIZED",
                  "402 PAYMENT_REQUIRED",
                  "403 FORBIDDEN",
                  "404 NOT_FOUND",
                  "405 METHOD_NOT_ALLOWED",
                  "406 NOT_ACCEPTABLE",
                  "407 PROXY_AUTHENTICATION_REQUIRED",
                  "408 REQUEST_TIMEOUT",
                  "409 CONFLICT",
                  "410 GONE",
                  "411 LENGTH_REQUIRED",
                  "412 PRECONDITION_FAILED",
                  "413 PAYLOAD_TOO_LARGE",
                  "413 REQUEST_ENTITY_TOO_LARGE",
                  "414 URI_TOO_LONG",
                  "414 REQUEST_URI_TOO_LONG",
                  "415 UNSUPPORTED_MEDIA_TYPE",
                  "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                  "417 EXPECTATION_FAILED",
                  "418 I_AM_A_TEAPOT",
                  "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                  "420 METHOD_FAILURE",
                  "421 DESTINATION_LOCKED",
                  "422 UNPROCESSABLE_ENTITY",
                  "423 LOCKED",
                  "424 FAILED_DEPENDENCY",
                  "425 TOO_EARLY",
                  "426 UPGRADE_REQUIRED",
                  "428 PRECONDITION_REQUIRED",
                  "429 TOO_MANY_REQUESTS",
                  "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                  "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                  "500 INTERNAL_SERVER_ERROR",
                  "501 NOT_IMPLEMENTED",
               "502 BAD_GATEWAY",
               "503 SERVICE_UNAVAILABLE",
               "504 GATEWAY_TIMEOUT",
               "505 HTTP_VERSION_NOT_SUPPORTED",
               "506 VARIANT_ALSO_NEGOTIATES",
               "507 INSUFFICIENT_STORAGE",
               "508 LOOP_DETECTED",
               "509 BANDWIDTH_LIMIT_EXCEEDED",
               "510 NOT_EXTENDED",
               "511 NETWORK_AUTHENTICATION_REQUIRED"
             ],
             "type": "string"
           },
           "statusCodeValue": {
             "format": "int32",
             "type": "integer"
           }
         },
        "title": "ResponseEntity",
        "type": "object"
      },
    "SpinnakerPluginDescriptor": {
      "properties": {
        "dependencies": {
          "items": {
            "$ref": "#/definitions/PluginDependency"
          },
          "type": "array"
        },
        "license": {
          "type": "string"
        },
        "pluginClass": {
          "type": "string"
        },
        "pluginDescription": {
          "type": "string"
        },
        "pluginId": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "requires": {
          "type": "string"
        },
        "unsafe": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "unsafe"
      ],
      "title": "SpinnakerPluginDescriptor",
      "type": "object"
    },
    "SpinnakerPluginInfo": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectUrl": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "releases": {
          "items": {
            "$ref": "#/definitions/SpinnakerPluginRelease"
          },
          "type": "array"
        },
        "repositoryId": {
          "type": "string"
        }
      },
      "required": [
        "releases"
      ],
      "title": "SpinnakerPluginInfo",
      "type": "object"
    },
    "SpinnakerPluginRelease": {
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "preferred": {
          "type": "boolean"
        },
        "requires": {
          "type": "string"
        },
        "sha512sum": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "SpinnakerPluginRelease",
      "type": "object"
    },
    "URI": {
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      },
      "title": "URI",
      "type": "object"
    },
    "URL": {
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "format": "int32",
          "type": "integer"
        },
        "deserializedFields": {
          "$ref": "#/definitions/URLStreamHandler"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "serializedHashCode": {
          "format": "int32",
          "type": "integer"
        },
        "userInfo": {
          "type": "string"
        }
      },
      "title": "URL",
      "type": "object"
    },
    "URLStreamHandler": {
      "title": "URLStreamHandler",
      "type": "object"
    },
    "User": {
      "properties": {
        "accountNonExpired": {
          "type": "boolean"
        },
        "accountNonLocked": {
          "type": "boolean"
        },
        "allowedAccounts": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "authorities": {
          "items": {
            "$ref": "#/definitions/GrantedAuthority"
          },
          "type": "array"
        },
        "credentialsNonExpired": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "User",
      "type": "object"
    },
    "Version": {
      "properties": {
        "version": {
          "type": "string"
        }
      },
      "title": "Version",
      "type": "object"
    }
  },
  "host": "localhost",
  "info": {
    "contact": {},
    "title": "Spinnaker API"
  },
  "paths": {
    "/actions/pipelines/reorder": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "reorderPipelinesUsingPOST",
        "parameters": [
          {
            "description": "reorderPipelinesCommand",
            "in": "body",
            "name": "reorderPipelinesCommand",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReorderPipelinesCommand"
            }
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "type": "object"
                }
              },
              "201": {
                "description": "Created"
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Re-order pipelines",
        "tags": [
          "reorder-pipelines-controller"
        ]
      }
      },
    "/applications": {
      "get": {
        "deprecated": false,
        "operationId": "getAllApplicationsUsingGET",
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "filters results to only include applications deployed in the specified account",
            "in": "query",
            "name": "account",
            "required": false,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "description": "filters results to only include applications owned by the specified email",
            "in": "query",
            "name": "owner",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of applications",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{applicationName}/jobs/{account}/{region}/{name}": {
      "get": {
        "deprecated": false,
        "operationId": "getJobUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "applicationName",
            "in": "path",
            "name": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "default": "false",
            "description": "expand",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          },
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get job",
        "tags": [
          "job-controller"
        ]
      }
    },
    "/applications/{applicationName}/serverGroups": {
      "get": {
        "deprecated": false,
        "operationId": "getServerGroupsForApplicationUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "applicationName",
            "in": "path",
            "name": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "description": "cloudProvider",
            "in": "query",
            "name": "cloudProvider",
            "required": false,
            "type": "string"
          },
          {
            "description": "clusters",
            "in": "query",
            "name": "clusters",
            "required": false,
            "type": "string"
          },
          {
            "default": "false",
            "description": "expand",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of server groups for a given application",
        "tags": [
          "server-group-controller"
        ]
      }
    },
    "/applications/{applicationName}/serverGroups/{account}/{region}/{serverGroupName}": {
      "get": {
        "deprecated": false,
        "operationId": "getServerGroupDetailsUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "applicationName",
            "in": "path",
            "name": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "default": "true",
            "description": "includeDetails",
            "in": "query",
            "name": "includeDetails",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          },
          {
            "description": "serverGroupName",
            "in": "path",
            "name": "serverGroupName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a server group's details",
        "tags": [
          "server-group-controller"
        ]
      }
      },
    "/applications/{application}": {
      "get": {
        "deprecated": false,
        "operationId": "getApplicationUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "description": "expand",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve an application's details",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{application}/clusters": {
      "get": {
        "deprecated": false,
        "operationId": "getClustersUsingGET_2",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of cluster names for an application, grouped by account",
        "tags": [
          "cluster-controller"
        ]
      }
      },
    "/applications/{application}/clusters/{account}": {
      "get": {
        "deprecated": false,
        "operationId": "getClustersUsingGET_1",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of clusters for an account",
        "tags": [
          "cluster-controller"
        ]
      }
      },
    "/applications/{application}/clusters/{account}/{clusterName}": {
      "get": {
        "deprecated": false,
        "operationId": "getClustersUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "clusterName",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a cluster's details",
        "tags": [
          "cluster-controller"
        ]
      }
    },
    "/applications/{application}/clusters/{account}/{clusterName}/serverGroups": {
      "get": {
        "deprecated": false,
        "operationId": "getServerGroupsUsingGET_1",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "clusterName",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Retrieve a list of server groups for a cluster",
        "tags": [
          "cluster-controller"
        ]
      }
      },
    "/applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}": {
      "get": {
        "deprecated": false,
        "operationId": "getServerGroupsUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "clusterName",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "serverGroupName",
            "in": "path",
            "name": "serverGroupName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a server group's details",
        "tags": [
          "cluster-controller"
        ]
      }
    },
    "/applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}/scalingActivities": {
      "get": {
        "deprecated": false,
        "operationId": "getScalingActivitiesUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "clusterName",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "query",
            "name": "region",
            "required": false,
            "type": "string"
          },
          {
            "description": "serverGroupName",
            "in": "path",
            "name": "serverGroupName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of scaling activities for a server group",
        "tags": [
          "cluster-controller"
        ]
      }
      },
    "/applications/{application}/clusters/{account}/{clusterName}/{cloudProvider}/{scope}/serverGroups/target/{target}": {
      "get": {
        "deprecated": false,
        "description": "`scope` is either a zone or a region",
        "operationId": "getTargetServerGroupUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "cloudProvider",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "type": "string"
          },
          {
            "description": "clusterName",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "onlyEnabled",
            "in": "query",
            "name": "onlyEnabled",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "scope",
            "in": "path",
            "name": "scope",
            "required": true,
            "type": "string"
          },
          {
            "description": "target",
            "in": "path",
            "name": "target",
            "required": true,
            "type": "string"
          },
          {
            "description": "validateOldest",
            "in": "query",
            "name": "validateOldest",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a server group that matches a target coordinate (e.g., newest, ancestor) relative to a cluster",
        "tags": [
          "cluster-controller"
        ]
      }
    },
    "/applications/{application}/clusters/{account}/{clusterName}/{type}/loadBalancers": {
      "get": {
        "deprecated": false,
        "operationId": "getClusterLoadBalancersUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "applicationName",
            "in": "path",
            "name": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "description": "clusterName",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          },
          {
            "description": "type",
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a cluster's loadbalancers",
        "tags": [
          "cluster-controller"
        ]
      }
    },
    "/applications/{application}/executions/search": {
      "get": {
        "deprecated": false,
        "operationId": "searchForPipelineExecutionsByTriggerUsingGET",
        "parameters": [
          {
            "description": "Only includes executions that are part of this application. If this value is \"*\", results will include executions of all applications.",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "description": "Only includes executions that were triggered by a trigger with this eventId.",
            "in": "query",
            "name": "eventId",
            "required": false,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "default": false,
            "description": "Expands each execution object in the resulting list. If this value is missing, it is defaulted to false.",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean",
            "x-example": false
          },
          {
            "allowEmptyValue": false,
            "description": "Only includes executions that with this pipeline name.",
            "in": "query",
            "name": "pipelineName",
            "required": false,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "default": false,
            "description": "Reverses the resulting list before it is paginated. If this value is missing, it is defaulted to false.",
            "in": "query",
            "name": "reverse",
            "required": false,
            "type": "boolean",
            "x-example": false
          },
          {
            "allowEmptyValue": false,
            "default": 10,
            "description": "Sets the size of the resulting list for pagination. This value must be > 0. If this value is missing, it is defaulted to 10.",
            "format": "int32",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "allowEmptyValue": false,
            "default": 0,
            "description": "Sets the first item of the resulting list for pagination. The list is 0-indexed. This value must be >= 0. If this value is missing, it is defaulted to 0.",
            "format": "int32",
            "in": "query",
            "name": "startIndex",
            "required": false,
            "type": "integer"
          },
          {
            "allowEmptyValue": false,
            "description": "Only includes executions with a status that is equal to a status provided in this field. The list of statuses should be given as a comma-delimited string. If this value is missing, includes executions of all statuses. Allowed statuses are: NOT_STARTED, RUNNING, PAUSED, SUSPENDED, SUCCEEDED, FAILED_CONTINUE, TERMINAL, CANCELED, REDIRECT, STOPPED, SKIPPED, BUFFERED.",
            "in": "query",
            "name": "statuses",
            "required": false,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "description": "Only includes executions that were triggered by a trigger that matches the subset of fields provided by this value. This value should be a base64-encoded string of a JSON representation of a trigger object. The comparison succeeds if the execution trigger contains all the fields of the input trigger, the fields are of the same type, and each value of the field \"matches\". The term \"matches\" is specific for each field's type:\n- For Strings: A String value in the execution's trigger matches the input trigger's String value if the former equals the latter (case-insensitive) OR if the former matches the latter as a regular expression.\n- For Maps: A Map value in the execution's trigger matches the input trigger's Map value if the former contains all keys of the latter and their values match.\n- For Collections: A Collection value in the execution's trigger matches the input trigger's Collection value if the former has a unique element that matches each element of the latter.\n- Every other value is compared using the Java \"equals\" method (Groovy \"==\" operator)",
            "in": "query",
            "name": "trigger",
            "required": false,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "default": 9223372036854775807,
            "description": "Only includes executions that were built at or before the given time, represented as a Unix timestamp in ms (UTC). This value must be <= 9223372036854775807 (Long.MAX_VALUE) and >= the value of [triggerTimeStartBoundary], if provided. If this value is missing, it is defaulted to 9223372036854775807.",
            "format": "int64",
            "in": "query",
            "name": "triggerTimeEndBoundary",
            "required": false,
            "type": "integer"
          },
          {
            "allowEmptyValue": false,
            "default": 0,
            "description": "Only includes executions that were built at or after the given time, represented as a Unix timestamp in ms (UTC). This value must be >= 0 and <= the value of [triggerTimeEndBoundary], if provided. If this value is missing, it is defaulted to 0.",
            "format": "int64",
            "in": "query",
            "name": "triggerTimeStartBoundary",
            "required": false,
            "type": "integer"
          },
          {
            "allowEmptyValue": false,
            "description": "Only includes executions that were triggered by a trigger with a type that is equal to a type provided in this field. The list of trigger types should be a comma-delimited string. If this value is missing, results will includes executions of all trigger types.",
            "in": "query",
            "name": "triggerTypes",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Search for pipeline executions using a combination of criteria. The returned list is sorted by buildTime (trigger time) in reverse order so that newer executions are first in the list.",
        "tags": [
          "executions-controller"
        ]
      }
    },
    "/applications/{application}/functions": {
      "get": {
        "deprecated": false,
        "operationId": "applicationFunctionsUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get application functions",
        "tags": [
          "amazon-infrastructure-controller"
        ]
      }
    },
    "/applications/{application}/history": {
      "get": {
        "deprecated": false,
        "operationId": "getApplicationHistoryUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "description": "limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of an application's configuration revision history",
        "tags": [
          "application-controller"
        ]
      }
      },
    "/applications/{application}/loadBalancers": {
      "get": {
        "deprecated": false,
        "operationId": "getApplicationLoadBalancersUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of load balancers for a given application",
        "tags": [
          "load-balancer-controller"
        ]
      }
    },
    "/applications/{application}/pipelineConfigs": {
      "get": {
        "deprecated": false,
        "operationId": "getPipelineConfigsForApplicationUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of an application's pipeline configurations",
        "tags": [
          "application-controller"
        ]
      }
      },
    "/applications/{application}/pipelineConfigs/{pipelineName}": {
      "get": {
        "deprecated": false,
        "operationId": "getPipelineConfigUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipelineName",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a pipeline configuration",
        "tags": [
          "application-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "operationId": "invokePipelineConfigUsingPOST",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipelineName",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "type": "string"
          },
          {
            "description": "trigger",
            "in": "body",
            "name": "trigger",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "user",
            "in": "query",
            "name": "user",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HttpEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Invoke pipeline config",
        "tags": [
          "application-controller"
        ]
      }
      },
    "/applications/{application}/pipelines": {
      "get": {
        "deprecated": false,
        "operationId": "getPipelinesUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "expand",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "statuses",
            "in": "query",
            "name": "statuses",
            "required": false,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
               "200" : {
                 "description": "OK",
                 "schema": {
                   "items": {
                     "type": "object"
                   },
                   "type": "array"
                 }
               },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Retrieve a list of an application's pipeline executions",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{application}/pipelines/{id}/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "operationId": "cancelPipelineUsingPUT",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "reason",
            "in": "query",
            "name": "reason",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Cancel pipeline",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{application}/serverGroupManagers": {
      "get": {
        "deprecated": false,
        "operationId": "getServerGroupManagersForApplicationUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of server group managers for an application",
        "tags": [
          "server-group-manager-controller"
        ]
      }
      },
    "/applications/{application}/serverGroups/{account}/{serverGroupName}/events": {
      "get": {
        "deprecated": false,
        "operationId": "getEventsUsingGET",
        "parameters": [
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": true,
            "type": "string"
          },
          {
            "description": "region",
            "in": "query",
            "name": "region",
            "required": true,
            "type": "string"
          },
          {
            "description": "serverGroupName",
            "in": "path",
            "name": "serverGroupName",
            "required": true,
            "type": "string"
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
               "200" : {
                 "description": "OK",
                 "schema": {
                   "items": {
                     "type": "object"
                   },
                   "type": "array"
                 }
               },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Retrieves a list of events for a server group",
        "tags": [
          "ecs-server-group-events-controller"
        ]
      }
    },
    "/applications/{application}/snapshots/{account}": {
      "get": {
        "deprecated": false,
        "operationId": "getCurrentSnapshotUsingGET",
        "parameters": [
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get current snapshot",
        "tags": [
          "snapshot-controller"
        ]
      }
    },
    "/applications/{application}/snapshots/{account}/history": {
      "get": {
        "deprecated": false,
        "operationId": "getSnapshotHistoryUsingGET",
        "parameters": [
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "default": 20,
            "description": "limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get snapshot history",
        "tags": [
          "snapshot-controller"
        ]
      }
    },
    "/applications/{application}/strategyConfigs": {
      "get": {
        "deprecated": false,
        "operationId": "getStrategyConfigsForApplicationUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of an application's pipeline strategy configurations",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{application}/strategyConfigs/{strategyName}": {
      "get": {
        "deprecated": false,
        "operationId": "getStrategyConfigUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "strategyName",
            "in": "path",
            "name": "strategyName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a pipeline strategy configuration",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{application}/tasks": {
      "get": {
        "deprecated": false,
        "operationId": "getTasksUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "page",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "statuses",
            "in": "query",
            "name": "statuses",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of an application's tasks",
        "tags": [
          "application-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "operationId": "taskUsingPOST",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "map",
            "in": "body",
            "name": "map",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Create task",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{application}/tasks/{id}": {
      "get": {
        "deprecated": true,
        "operationId": "getTaskUsingGET",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get task",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{application}/tasks/{id}/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "operationId": "cancelTaskUsingPUT",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Cancel task",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/applications/{application}/tasks/{id}/details/{taskDetailsId}": {
      "get": {
        "deprecated": true,
        "operationId": "getTaskDetailsUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "taskDetailsId",
            "in": "path",
            "name": "taskDetailsId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get task details",
        "tags": [
          "application-controller"
        ]
      }
    },
    "/artifacts/account/{accountName}/versions": {
      "get": {
        "deprecated": false,
        "operationId": "artifactVersionsUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "accountName",
            "in": "path",
            "name": "accountName",
            "required": true,
            "type": "string"
          },
          {
            "description": "artifactName",
            "in": "query",
            "name": "artifactName",
            "required": true,
            "type": "string"
          },
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve the list of artifact versions by account and artifact names",
        "tags": [
          "artifact-controller"
        ]
      }
    },
    "/artifacts/credentials": {
      "get": {
        "deprecated": false,
        "operationId": "allUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve the list of artifact accounts configured in Clouddriver.",
        "tags": [
          "artifact-controller"
        ]
      }
    },
    "/artifacts/{provider}/{packageName}/{version}": {
      "get": {
        "deprecated": false,
        "operationId": "getArtifactUsingGET",
        "parameters": [
          {
            "description": "packageName",
            "in": "path",
            "name": "packageName",
            "required": true,
            "type": "string"
          },
          {
            "description": "provider",
            "in": "path",
            "name": "provider",
            "required": true,
            "type": "string"
          },
          {
            "description": "version",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve the specified artifact version for an artifact provider and package name",
        "tags": [
          "artifact-controller"
        ]
      }
    },
    "/auth/loggedOut": {
      "get": {
        "deprecated": false,
        "operationId": "loggedOutUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get logged out message",
        "tags": [
          "auth-controller"
        ]
      }
    },
    "/auth/redirect": {
      "get": {
        "deprecated": false,
        "operationId": "redirectUsingGET",
        "parameters": [
          {
            "description": "to",
            "in": "query",
            "name": "to",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Redirect to Deck",
        "tags": [
          "auth-controller"
        ]
      }
    },
    "/auth/roles/sync": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "syncUsingPOST",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Sync user roles",
        "tags": [
          "auth-controller"
        ]
      }
    },
    "/auth/user": {
      "get": {
        "deprecated": false,
        "operationId": "userUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get user",
        "tags": [
          "auth-controller"
        ]
      }
    },
    "/auth/user/serviceAccounts": {
      "get": {
        "deprecated": false,
        "operationId": "getServiceAccountsUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "query",
            "name": "application",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get service accounts",
        "tags": [
          "auth-controller"
        ]
      }
    },
    "/bakery/logs/{region}/{statusId}": {
      "get": {
        "deprecated": false,
        "operationId": "lookupLogsUsingGET",
        "parameters": [
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          },
          {
            "description": "statusId",
            "in": "path",
            "name": "statusId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve the logs for a given bake",
        "tags": [
          "bake-controller"
        ]
      }
    },
    "/bakery/options": {
      "get": {
        "deprecated": false,
        "operationId": "bakeOptionsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of available bakery base images, grouped by cloud provider",
        "tags": [
          "bake-controller"
        ]
      }
    },
    "/bakery/options/{cloudProvider}": {
      "get": {
        "deprecated": false,
        "operationId": "bakeOptionsUsingGET",
        "parameters": [
          {
            "description": "cloudProvider",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of available bakery base images for a given cloud provider",
        "tags": [
          "bake-controller"
        ]
      }
    },
    "/ci/builds": {
      "get": {
        "deprecated": false,
        "operationId": "getBuildsUsingGET_1",
        "parameters": [
          {
            "description": "completionStatus",
            "in": "query",
            "name": "completionStatus",
            "required": false,
            "type": "string"
          },
          {
            "description": "projectKey",
            "in": "query",
            "name": "projectKey",
            "required": true,
            "type": "string"
          },
          {
            "description": "repoSlug",
            "in": "query",
            "name": "repoSlug",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "getBuilds",
        "tags": [
          "ci-controller"
        ]
      }
    },
    "/concourse/{buildMaster}/teams/{team}/pipelines": {
      "get": {
        "deprecated": false,
        "operationId": "pipelinesUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          },
          {
            "description": "team",
            "in": "path",
            "name": "team",
            "required": true,
            "type": "string"
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Retrieve the list of pipeline names for a given team available to triggers",
        "tags": [
          "concourse-controller"
        ]
      }
      },
    "/concourse/{buildMaster}/teams/{team}/pipelines/{pipeline}/jobs": {
      "get": {
        "deprecated": false,
        "operationId": "jobsUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipeline",
            "in": "path",
            "name": "pipeline",
            "required": true,
            "type": "string"
          },
          {
            "description": "team",
            "in": "path",
            "name": "team",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve the list of job names for a given pipeline available to triggers",
        "tags": [
          "concourse-controller"
        ]
      }
      },
    "/concourse/{buildMaster}/teams/{team}/pipelines/{pipeline}/resources": {
      "get": {
        "deprecated": false,
        "operationId": "resourcesUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipeline",
            "in": "path",
            "name": "pipeline",
            "required": true,
            "type": "string"
          },
          {
            "description": "team",
            "in": "path",
            "name": "team",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve the list of resource names for a given pipeline available to the Concourse stage",
        "tags": [
          "concourse-controller"
        ]
      }
    },
    "/credentials": {
      "get": {
        "deprecated": false,
        "operationId": "getAccountsUsingGET",
        "parameters": [
          {
            "in": "query",
            "name": "accountNonExpired",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "accountNonLocked",
            "required": false,
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "allowedAccounts",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "authorities[0].authority",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "credentialsNonExpired",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "expand",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "firstName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lastName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "roles",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "username",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of accounts",
        "tags": [
          "credentials-controller"
        ]
      }
      },
    "/credentials/{account}": {
      "get": {
        "deprecated": false,
        "operationId": "getAccountUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "accountNonExpired",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "accountNonLocked",
            "required": false,
            "type": "boolean"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "allowedAccounts",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "authorities[0].authority",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "credentialsNonExpired",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "firstName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lastName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "roles",
            "required": false,
            "type": "array"
          },
          {
            "in": "query",
            "name": "username",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve an account's details",
        "tags": [
          "credentials-controller"
        ]
      }
    },
    "/executions": {
      "get": {
        "deprecated": false,
        "operationId": "getLatestExecutionsByConfigIdsUsingGET",
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "A comma-separated list of executions to retrieve. Either this OR pipelineConfigIds must be supplied, but not both.",
            "in": "query",
            "name": "executionIds",
            "required": false,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "default": true,
            "description": "Expands each execution object in the resulting list. If this value is missing, it is defaulted to true.",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean"
          },
          {
            "allowEmptyValue": false,
            "description": "The number of executions to return per pipeline configuration. Ignored if executionIds parameter is supplied. If this value is missing, it is defaulted to 1.",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "allowEmptyValue": false,
            "description": "A comma-separated list of pipeline configuration IDs to retrieve recent executions for. Either this OR pipelineConfigIds must be supplied, but not both.",
            "in": "query",
            "name": "pipelineConfigIds",
            "required": false,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "description": "A comma-separated list of execution statuses to filter by. Ignored if executionIds parameter is supplied. If this value is missing, it is defaulted to all statuses.",
            "in": "query",
            "name": "statuses",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieves an ad-hoc collection of executions based on a number of user-supplied parameters. Either executionIds or pipelineConfigIds must be supplied in order to return any results. If both are supplied, an exception will be thrown.",
        "tags": [
          "executions-controller"
        ]
      }
    },
    "/firewalls": {
      "get": {
        "deprecated": false,
        "operationId": "allUsingGET_1",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of firewalls, grouped by account, cloud provider, and region",
        "tags": [
          "firewall-controller"
        ]
      }
    },
    "/firewalls/{account}": {
      "get": {
        "deprecated": false,
        "operationId": "allByAccountUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of firewalls for a given account, grouped by region",
        "tags": [
          "firewall-controller"
        ]
      }
    },
    "/firewalls/{account}/{region}": {
      "get": {
        "deprecated": false,
        "operationId": "allByAccountAndRegionUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of firewalls for a given account and region",
        "tags": [
          "firewall-controller"
        ]
      }
    },
    "/firewalls/{account}/{region}/{name}": {
      "get": {
        "deprecated": false,
        "operationId": "getSecurityGroupUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          },
          {
            "description": "vpcId",
            "in": "query",
            "name": "vpcId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a firewall's details",
        "tags": [
          "firewall-controller"
        ]
      }
    },
    "/functions": {
      "get": {
        "deprecated": false,
        "operationId": "functionsUsingGET",
        "parameters": [
          {
            "description": "account",
            "in": "query",
            "name": "account",
            "required": false,
            "type": "string"
          },
          {
            "description": "functionName",
            "in": "query",
            "name": "functionName",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "query",
            "name": "region",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get functions",
        "tags": [
          "amazon-infrastructure-controller"
        ]
      }
    },
    "/images/find": {
      "get": {
        "deprecated": false,
        "description": "The query parameter `q` filters the list of images by image name",
        "operationId": "findImagesUsingGET",
        "parameters": [
          {
            "description": "account",
            "in": "query",
            "name": "account",
            "required": false,
            "type": "string"
          },
          {
            "description": "count",
            "format": "int32",
            "in": "query",
            "name": "count",
            "required": false,
            "type": "integer"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "q",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "query",
            "name": "region",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of images, filtered by cloud provider, region, and account",
        "tags": [
          "image-controller"
        ]
      }
      },
    "/images/tags": {
      "get": {
        "deprecated": false,
        "operationId": "findTagsUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "query",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "repository",
            "in": "query",
            "name": "repository",
            "required": true,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Find tags",
        "tags": [
          "image-controller"
        ]
      }
      },
    "/images/{account}/{region}/{imageId}": {
      "get": {
        "deprecated": false,
        "operationId": "getImageDetailsUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "imageId",
            "in": "path",
            "name": "imageId",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get image details",
        "tags": [
          "image-controller"
        ]
      }
    },
    "/instanceTypes": {
      "get": {
        "deprecated": false,
        "operationId": "instanceTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get instance types",
        "tags": [
          "amazon-infrastructure-controller"
        ]
      }
      },
    "/instances/{account}/{region}/{instanceId}": {
      "get": {
        "deprecated": false,
        "operationId": "getInstanceDetailsUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "instanceId",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve an instance's details",
        "tags": [
          "instance-controller"
        ]
      }
    },
    "/instances/{account}/{region}/{instanceId}/console": {
      "get": {
        "deprecated": false,
        "operationId": "getConsoleOutputUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "instanceId",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "type": "object"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Retrieve an instance's console output",
        "tags": [
          "instance-controller"
        ]
      }
    },
    "/loadBalancers": {
      "get": {
        "deprecated": false,
        "operationId": "getAllUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of load balancers for a given cloud provider",
        "tags": [
          "load-balancer-controller"
        ]
      }
    },
    "/loadBalancers/{account}/{region}/{name}": {
      "get": {
        "deprecated": false,
        "operationId": "getLoadBalancerDetailsUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a load balancer's details as a single element list for a given account, region, cloud provider and load balancer name",
        "tags": [
          "load-balancer-controller"
        ]
      }
    },
    "/loadBalancers/{name}": {
      "get": {
        "deprecated": false,
        "operationId": "getLoadBalancerUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a load balancer for a given cloud provider",
        "tags": [
          "load-balancer-controller"
        ]
      }
    },
    "/managed/api-docs": {
      "get": {
        "deprecated": false,
        "operationId": "getApiDocsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "getApiDocs",
        "tags": [
          "managed-controller"
        ]
      }
      },
    "/managed/application/{application}": {
      "get": {
        "deprecated": false,
        "operationId": "getApplicationDetailsUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "default": "resources",
            "description": "entities",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "entities",
            "required": false,
            "type": "array"
          },
          {
            "default": false,
            "description": "includeDetails",
            "in": "query",
            "name": "includeDetails",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get managed details about an application",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/application/{application}/config": {
      "delete": {
        "deprecated": false,
        "operationId": "deleteManifestByAppUsingDELETE",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryConfig"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete a delivery config manifest for an application",
        "tags": [
          "managed-controller"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "getConfigByUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get the delivery config associated with an application",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/application/{application}/environment/{environment}/constraint": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "updateConstraintStatusUsingPOST",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "environment",
            "in": "path",
            "name": "environment",
            "required": true,
            "type": "string"
          },
          {
            "description": "status",
            "in": "body",
            "name": "status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConstraintStatus"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Update the status of an environment constraint",
        "tags": [
          "managed-controller"
        ]
      }
      },
    "/managed/application/{application}/environment/{environment}/constraints": {
      "get": {
        "deprecated": false,
        "operationId": "getConstraintStateUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "environment",
            "in": "path",
            "name": "environment",
            "required": true,
            "type": "string"
          },
          {
            "default": "10",
            "description": "limit",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConstraintState"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "List up-to {limit} current constraint states for an environment",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/application/{application}/pause": {
      "delete": {
        "deprecated": false,
        "operationId": "resumeApplicationUsingDELETE",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Resume management of an entire application",
        "tags": [
          "managed-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "pauseApplicationUsingPOST",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Pause management of an entire application",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/application/{application}/pin": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "createPinUsingPOST",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "pin",
            "in": "body",
            "name": "pin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentArtifactPin"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Create a pin for an artifact in an environment",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/application/{application}/pin/{targetEnvironment}": {
      "delete": {
        "deprecated": false,
        "operationId": "deletePinUsingDELETE",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "reference",
            "in": "query",
            "name": "reference",
            "required": false,
            "type": "string"
          },
          {
            "description": "targetEnvironment",
            "in": "path",
            "name": "targetEnvironment",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Unpin one or more artifact(s) in an environment. If the `reference` parameter is specified, only the corresponding artifact will be unpinned. If it's omitted, all pinned artifacts in the environment will be unpinned.",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/application/{application}/veto": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "vetoUsingPOST",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "veto",
            "in": "body",
            "name": "veto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentArtifactVeto"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Veto an artifact version in an environment",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/application/{application}/veto/{targetEnvironment}/{reference}/{version}": {
      "delete": {
        "deprecated": false,
        "operationId": "deleteVetoUsingDELETE",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "reference",
            "in": "path",
            "name": "reference",
            "required": true,
            "type": "string"
          },
          {
            "description": "targetEnvironment",
            "in": "path",
            "name": "targetEnvironment",
            "required": true,
            "type": "string"
          },
          {
            "description": "version",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Veto an artifact version in an environment",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/delivery-configs": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-yaml"
        ],
        "deprecated": false,
        "operationId": "upsertManifestUsingPOST",
        "parameters": [
          {
            "description": "manifest",
            "in": "body",
            "name": "manifest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryConfig"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Create or update a delivery config manifest",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/delivery-configs/diff": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-yaml"
        ],
        "deprecated": false,
        "operationId": "diffManifestUsingPOST",
        "parameters": [
          {
            "description": "manifest",
            "in": "body",
            "name": "manifest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Ad-hoc validate and diff a config manifest",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/delivery-configs/validate": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-yaml"
        ],
        "deprecated": false,
        "operationId": "validateManifestUsingPOST",
        "parameters": [
          {
            "description": "manifest",
            "in": "body",
            "name": "manifest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryConfig"
            }
          }
            ],
            "produces" : [
              "application/json",
              "application/x-yaml"
            ],
            "responses" : {
               "200" : {
                 "description": "OK",
                 "schema": {
                   "type": "object"
                 }
               },
              "201": {
                "description": "Created"
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Validate a delivery config manifest",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/delivery-configs/{name}": {
      "delete": {
        "deprecated": false,
        "operationId": "deleteManifestUsingDELETE",
        "parameters": [
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryConfig"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete a delivery config manifest",
        "tags": [
          "managed-controller"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "getManifestUsingGET",
        "parameters": [
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a delivery config manifest",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/delivery-configs/{name}/artifacts": {
      "get": {
        "deprecated": false,
        "operationId": "getManifestArtifactsUsingGET",
        "parameters": [
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get the status of each version of each artifact in each environment",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/resources/diff": {
      "post": {
        "consumes": [
          "application/json",
          "application/x-yaml"
        ],
        "deprecated": false,
        "operationId": "diffResourceUsingPOST",
        "parameters": [
          {
            "description": "resource",
            "in": "body",
            "name": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Ad-hoc validate and diff a resource",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/resources/export/artifact/{cloudProvider}/{account}/{clusterName}": {
      "get": {
        "deprecated": false,
        "operationId": "exportResourceUsingGET",
        "parameters": [
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "cloudProvider",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "type": "string"
          },
          {
            "description": "clusterName",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Generates an artifact definition based on the artifact used in a running cluster",
        "tags": [
          "managed-controller"
        ]
      }
      },
    "/managed/resources/export/{cloudProvider}/{account}/{type}/{name}": {
      "get": {
        "deprecated": false,
        "operationId": "exportResourceUsingGET_1",
        "parameters": [
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "cloudProvider",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "type": "string"
          },
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "serviceAccount",
            "in": "query",
            "name": "serviceAccount",
            "required": true,
            "type": "string"
          },
          {
            "description": "type",
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Generate a keel resource definition for a deployed cloud resource",
        "tags": [
          "managed-controller"
        ]
      }
      },
    "/managed/resources/{resourceId}": {
      "get": {
        "deprecated": false,
        "operationId": "getResourceUsingGET",
        "parameters": [
          {
            "description": "resourceId",
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "$ref": "#/definitions/Resource"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get a resource",
        "tags": [
          "managed-controller"
        ]
      }
      },
    "/managed/resources/{resourceId}/pause": {
      "delete": {
        "deprecated": false,
        "operationId": "resumeResourceUsingDELETE",
        "parameters": [
          {
            "description": "resourceId",
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Resume management of a resource",
        "tags": [
          "managed-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "pauseResourceUsingPOST",
        "parameters": [
          {
            "description": "resourceId",
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Pause management of a resource",
        "tags": [
          "managed-controller"
        ]
      }
    },
    "/managed/resources/{resourceId}/status": {
      "get": {
        "deprecated": false,
        "operationId": "getResourceStatusUsingGET",
        "parameters": [
          {
            "description": "resourceId",
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get status of a resource",
        "tags": [
          "managed-controller"
        ]
      }
      },
    "/networks": {
      "get": {
        "deprecated": false,
        "operationId": "allUsingGET_2",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of networks, grouped by cloud provider",
        "tags": [
          "network-controller"
        ]
      }
    },
    "/networks/{cloudProvider}": {
      "get": {
        "deprecated": false,
        "operationId": "allByCloudProviderUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "cloudProvider",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of networks for a given cloud provider",
        "tags": [
          "network-controller"
        ]
      }
    },
    "/pipelineConfigs": {
      "get": {
        "deprecated": false,
        "operationId": "getAllPipelineConfigsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get all pipeline configs.",
        "tags": [
          "pipeline-config-controller"
        ]
      }
    },
    "/pipelineConfigs/{pipelineConfigId}/convertToTemplate": {
      "get": {
        "deprecated": false,
        "operationId": "convertPipelineConfigToPipelineTemplateUsingGET",
        "parameters": [
          {
            "description": "pipelineConfigId",
            "in": "path",
            "name": "pipelineConfigId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Convert a pipeline config to a pipeline template.",
        "tags": [
          "pipeline-config-controller"
        ]
      }
    },
    "/pipelineConfigs/{pipelineConfigId}/history": {
      "get": {
        "deprecated": false,
        "operationId": "getPipelineConfigHistoryUsingGET",
        "parameters": [
          {
            "default": 20,
            "description": "limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "pipelineConfigId",
            "in": "path",
            "name": "pipelineConfigId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get pipeline config history.",
        "tags": [
          "pipeline-config-controller"
        ]
      }
    },
    "/pipelineTemplates": {
      "get": {
        "deprecated": false,
        "operationId": "listUsingGET",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "scopes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "scopes",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "List pipeline templates.",
        "tags": [
          "pipeline-templates-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "createUsingPOST",
        "parameters": [
          {
            "description": "pipelineTemplate",
            "in": "body",
            "name": "pipelineTemplate",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Create a pipeline template.",
        "tags": [
          "pipeline-templates-controller"
        ]
      }
    },
    "/pipelineTemplates/resolve": {
      "get": {
        "deprecated": false,
        "operationId": "resolveTemplatesUsingGET",
        "parameters": [
          {
            "description": "executionId",
            "in": "query",
            "name": "executionId",
            "required": false,
            "type": "string"
          },
          {
            "description": "pipelineConfigId",
            "in": "query",
            "name": "pipelineConfigId",
            "required": false,
            "type": "string"
          },
          {
            "description": "source",
            "in": "query",
            "name": "source",
            "required": true,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "type": "object"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Resolve a pipeline template.",
        "tags": [
          "pipeline-templates-controller"
        ]
      }
    },
    "/pipelineTemplates/{id}": {
      "delete": {
        "deprecated": false,
        "operationId": "deleteUsingDELETE",
        "parameters": [
          {
            "description": "application",
            "in": "query",
            "name": "application",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete a pipeline template.",
        "tags": [
          "pipeline-templates-controller"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "getUsingGET",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a pipeline template.",
        "tags": [
          "pipeline-templates-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "updateUsingPOST",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipelineTemplate",
            "in": "body",
            "name": "pipelineTemplate",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "default": false,
            "description": "skipPlanDependents",
            "in": "query",
            "name": "skipPlanDependents",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Update a pipeline template.",
        "tags": [
          "pipeline-templates-controller"
        ]
      }
    },
    "/pipelineTemplates/{id}/dependents": {
      "get": {
        "deprecated": false,
        "operationId": "listPipelineTemplateDependentsUsingGET",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "recursive",
            "in": "query",
            "name": "recursive",
            "required": false,
            "type": "boolean"
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
               "200" : {
                 "description": "OK",
                 "schema": {
                   "items": {
                     "type": "object"
                   },
                   "type": "array"
                 }
               },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "List all pipelines that implement a pipeline template",
        "tags": [
          "pipeline-templates-controller"
        ]
      }
    },
    "/pipelines": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "savePipelineUsingPOST",
        "parameters": [
          {
            "description": "pipeline",
            "in": "body",
            "name": "pipeline",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Save a pipeline definition",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/move": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "renamePipelineUsingPOST",
        "parameters": [
          {
            "description": "renameCommand",
            "in": "body",
            "name": "renameCommand",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Rename a pipeline definition",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/start": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "startUsingPOST",
        "parameters": [
          {
            "description": "map",
            "in": "body",
            "name": "map",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Initiate a pipeline execution",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/v2/{application}/{pipelineNameOrId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "invokePipelineConfigViaEchoUsingPOST",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipelineNameOrId",
            "in": "path",
            "name": "pipelineNameOrId",
            "required": true,
            "type": "string"
          },
          {
            "description": "trigger",
            "in": "body",
            "name": "trigger",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Trigger a pipeline execution",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/{application}/{pipelineNameOrId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "invokePipelineConfigUsingPOST_1",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipelineNameOrId",
            "in": "path",
            "name": "pipelineNameOrId",
            "required": true,
            "type": "string"
          },
          {
            "description": "trigger",
            "in": "body",
            "name": "trigger",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Trigger a pipeline execution",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/{application}/{pipelineName}": {
      "delete": {
        "deprecated": false,
        "operationId": "deletePipelineUsingDELETE",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipelineName",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete a pipeline definition",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/{id}": {
      "delete": {
        "deprecated": false,
        "operationId": "deletePipelineUsingDELETE_1",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete a pipeline execution",
        "tags": [
          "pipeline-controller"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "getPipelineUsingGET",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a pipeline execution",
        "tags": [
          "pipeline-controller"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "updatePipelineUsingPUT",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipeline",
            "in": "body",
            "name": "pipeline",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Update a pipeline definition",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/{id}/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "cancelPipelineUsingPUT_1",
        "parameters": [
          {
            "default": false,
            "description": "force",
            "in": "query",
            "name": "force",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "reason",
            "in": "query",
            "name": "reason",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Cancel a pipeline execution",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/{id}/evaluateExpression": {
      "get": {
        "deprecated": false,
        "operationId": "evaluateExpressionForExecutionUsingGET",
        "parameters": [
          {
            "description": "expression",
            "in": "query",
            "name": "expression",
            "required": true,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Evaluate a pipeline expression using the provided execution as context",
        "tags": [
          "pipeline-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "evaluateExpressionForExecutionViaPOSTUsingPOST",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipelineExpression",
            "in": "body",
            "name": "pipelineExpression",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Evaluate a pipeline expression using the provided execution as context",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/{id}/evaluateVariables": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "evaluateVariablesUsingPOST",
        "parameters": [
          {
            "allowEmptyValue": false,
            "description": "Execution id to run against",
            "in": "query",
            "name": "executionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "List of variables/expressions to evaluate",
            "in": "body",
            "name": "expressions",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/MapÂ«string,stringÂ»"
              },
              "type": "array"
            },
            "x-examples": {
              "application/json": "[{\"key\":\"a\",\"value\":\"1\"},{\"key\":\"b\",\"value\":\"2\"},{\"key\":\"sum\",\"value\":\"${a+b}\"}]"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "Comma separated list of requisite stage IDs for the evaluation stage",
            "in": "query",
            "name": "requisiteStageRefIds",
            "required": false,
            "type": "string"
          },
          {
            "allowEmptyValue": false,
            "description": "Version of SpEL evaluation logic to use (v3 or v4)",
            "in": "query",
            "name": "spelVersion",
            "required": false,
            "type": "string"
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "type": "object"
                }
              },
              "201": {
                "description": "Created"
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Evaluate variables same as Evaluate Variables stage using the provided execution as context",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/{id}/pause": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "pausePipelineUsingPUT",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Pause a pipeline execution",
        "tags": [
          "pipeline-controller"
        ]
      }
      },
      "/pipelines/{id}/resume" : {
         "put" : {
           "consumes": [
             "application/json"
           ],
           "deprecated": false,
           "operationId": "resumePipelineUsingPUT",
           "parameters": [
             {
               "description": "id",
               "in": "path",
               "name": "id",
               "required": true,
               "type": "string"
             }
           ],
           "produces": [
             "*/*"
           ],
           "responses": {
             "200": {
               "description": "OK",
               "schema": {
                 "additionalProperties": {
                   "type": "object"
                 },
                 "type": "object"
               }
             },
             "201": {
               "description": "Created"
             },
             "401": {
               "description": "Unauthorized"
             },
             "403": {
               "description": "Forbidden"
             },
             "404": {
               "description": "Not Found"
             }
           },
           "summary": "Resume a pipeline execution",
           "tags": [
             "pipeline-controller"
           ]
         }
      },
    "/pipelines/{id}/stages/{stageId}": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "updateStageUsingPATCH",
        "parameters": [
          {
            "description": "context",
            "in": "body",
            "name": "context",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "stageId",
            "in": "path",
            "name": "stageId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Update a stage execution",
        "tags": [
          "pipeline-controller"
        ]
      }
      },
    "/pipelines/{id}/stages/{stageId}/restart": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "restartStageUsingPUT",
        "parameters": [
          {
            "description": "context",
            "in": "body",
            "name": "context",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "stageId",
            "in": "path",
            "name": "stageId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Restart a stage execution",
        "tags": [
          "pipeline-controller"
        ]
      }
    },
    "/pipelines/{id}/{stageId}/evaluateExpression": {
      "get": {
        "deprecated": false,
        "operationId": "evaluateExpressionForExecutionAtStageUsingGET",
        "parameters": [
          {
            "description": "expression",
            "in": "query",
            "name": "expression",
            "required": true,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "stageId",
            "in": "path",
            "name": "stageId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Evaluate a pipeline expression at a specific stage using the provided execution as context",
        "tags": [
          "pipeline-controller"
        ]
      }
      },
    "/plugins/deck/plugin-manifest.json": {
      "get": {
        "deprecated": false,
        "operationId": "getPluginManifestUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/DeckPluginVersion"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a plugin manifest",
        "tags": [
          "deck-plugins-controller"
        ]
      }
    },
    "/plugins/deck/{pluginId}/{pluginVersion}/{asset}": {
      "get": {
        "deprecated": false,
        "operationId": "getPluginAssetUsingGET",
        "parameters": [
          {
            "description": "asset",
            "in": "path",
            "name": "asset",
            "required": true,
            "type": "string"
          },
          {
            "description": "pluginId",
            "in": "path",
            "name": "pluginId",
            "required": true,
            "type": "string"
          },
          {
            "description": "pluginVersion",
            "in": "path",
            "name": "pluginVersion",
            "required": true,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "type": "string"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Retrieve a single plugin asset by version",
        "tags": [
          "deck-plugins-controller"
        ]
      }
    },
    "/plugins/info": {
      "get": {
        "deprecated": false,
        "operationId": "getAllPluginInfoUsingGET",
        "parameters": [
          {
            "description": "service",
            "in": "query",
            "name": "service",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "$ref": "#/definitions/MapÂ«object,objectÂ»"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get all plugin info objects",
        "tags": [
          "plugin-info-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "persistPluginInfoUsingPOST",
        "parameters": [
          {
            "description": "pluginInfo",
            "in": "body",
            "name": "pluginInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpinnakerPluginInfo"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Persist plugin metadata information",
        "tags": [
          "plugin-info-controller"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "persistPluginInfoUsingPUT",
        "parameters": [
          {
            "description": "pluginInfo",
            "in": "body",
            "name": "pluginInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpinnakerPluginInfo"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Persist plugin metadata information",
        "tags": [
          "plugin-info-controller"
        ]
      }
    },
    "/plugins/info/{id}": {
      "delete": {
        "deprecated": false,
        "operationId": "deletePluginInfoUsingDELETE",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete plugin info with the provided Id",
        "tags": [
          "plugin-info-controller"
        ]
      }
    },
    "/plugins/installed": {
      "get": {
        "deprecated": false,
        "operationId": "getInstalledPluginsUsingGET",
        "parameters": [
          {
            "description": "service",
            "in": "query",
            "name": "service",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "additionalProperties": {
                    "items": {
                      "$ref": "#/definitions/SpinnakerPluginDescriptor"
                    },
                    "type": "array"
                  },
                  "type": "object"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get all installed Spinnaker plugins",
        "tags": [
          "plugins-installed-controller"
        ]
      }
    },
    "/plugins/publish/{pluginId}/{pluginVersion}": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "deprecated": false,
        "operationId": "publishPluginUsingPOST",
        "parameters": [
          {
            "description": "plugin",
            "in": "formData",
            "name": "plugin",
            "required": true,
            "type": "file"
          },
          {
            "description": "pluginId",
            "in": "path",
            "name": "pluginId",
            "required": true,
            "type": "string"
          },
          {
            "description": "pluginInfo",
            "in": "formData",
            "name": "pluginInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpinnakerPluginInfo"
            }
          },
          {
            "description": "pluginVersion",
            "in": "path",
            "name": "pluginVersion",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Publish a plugin binary and the plugin info metadata.",
        "tags": [
          "plugin-publish-controller"
        ]
      }
    },
    "/projects": {
      "get": {
        "deprecated": false,
        "operationId": "allUsingGET_3",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get all projects",
        "tags": [
          "project-controller"
        ]
      }
      },
    "/projects/{id}": {
      "get": {
        "deprecated": false,
        "operationId": "getUsingGET_1",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a project",
        "tags": [
          "project-controller"
        ]
      }
    },
    "/projects/{id}/clusters": {
      "get": {
        "deprecated": false,
        "operationId": "getClustersUsingGET_3",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a project's clusters",
        "tags": [
          "project-controller"
        ]
      }
      },
    "/projects/{id}/pipelines": {
      "get": {
        "deprecated": false,
        "operationId": "allPipelinesForProjectUsingGET",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": 5,
            "description": "limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "statuses",
            "in": "query",
            "name": "statuses",
            "required": false,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get all pipelines for project",
        "tags": [
          "project-controller"
        ]
      }
    },
    "/pubsub/subscriptions": {
      "get": {
        "deprecated": false,
        "operationId": "allUsingGET_4",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/MapÂ«string,stringÂ»"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve the list of pub/sub subscriptions configured in Echo.",
        "tags": [
          "pubsub-subscription-controller"
        ]
      }
      },
    "/search": {
      "get": {
        "deprecated": false,
        "operationId": "searchUsingGET",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "allowShortQuery",
            "in": "query",
            "name": "allowShortQuery",
            "required": false,
            "type": "boolean"
          },
          {
            "default": 1,
            "description": "page",
            "format": "int32",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 10000,
            "description": "pageSize",
            "format": "int32",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "platform",
            "in": "query",
            "name": "platform",
            "required": false,
            "type": "string"
          },
          {
            "description": "q",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Search infrastructure",
        "tags": [
          "search-controller"
        ]
      }
    },
    "/securityGroups": {
      "get": {
        "deprecated": false,
        "operationId": "allUsingGET_5",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of security groups, grouped by account, cloud provider, and region",
        "tags": [
          "security-group-controller"
        ]
      }
    },
    "/securityGroups/{account}": {
      "get": {
        "deprecated": false,
        "operationId": "allByAccountUsingGET_1",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of security groups for a given account, grouped by region",
        "tags": [
          "security-group-controller"
        ]
      }
    },
    "/securityGroups/{account}/{region}/{name}": {
      "get": {
        "deprecated": false,
        "operationId": "getSecurityGroupUsingGET_1",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "account",
            "in": "path",
            "name": "account",
            "required": true,
            "type": "string"
          },
          {
            "description": "name",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "default": "aws",
            "description": "provider",
            "in": "query",
            "name": "provider",
            "required": false,
            "type": "string"
          },
          {
            "description": "region",
            "in": "path",
            "name": "region",
            "required": true,
            "type": "string"
          },
          {
            "description": "vpcId",
            "in": "query",
            "name": "vpcId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a security group's details",
        "tags": [
          "security-group-controller"
        ]
      }
    },
    "/subnets": {
      "get": {
        "deprecated": false,
        "operationId": "subnetsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get subnets",
        "tags": [
          "amazon-infrastructure-controller"
        ]
      }
    },
    "/subnets/{cloudProvider}": {
      "get": {
        "deprecated": false,
        "operationId": "allByCloudProviderUsingGET_1",
        "parameters": [
          {
            "description": "cloudProvider",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
               "*/*"
            ],
            "responses" : {
               "200" : {
                  "description" : "OK",
                  "schema" : {
                     "items" : {
                       "type": "object"
                     },
                    "type": "array"
                  }
               },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Retrieve a list of subnets for a given cloud provider",
        "tags": [
          "subnet-controller"
        ]
      }
    },
    "/tasks": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "taskUsingPOST_1",
        "parameters": [
          {
            "description": "map",
            "in": "body",
            "name": "map",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Create task",
        "tags": [
          "task-controller"
        ]
      }
    },
    "/tasks/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "cancelTasksUsingPUT",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "ids",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "ids",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Cancel tasks",
        "tags": [
          "task-controller"
        ]
      }
    },
    "/tasks/{id}": {
      "delete": {
        "deprecated": false,
        "operationId": "deleteTaskUsingDELETE",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete task",
        "tags": [
          "task-controller"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "getTaskUsingGET_1",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get task",
        "tags": [
          "task-controller"
        ]
      }
    },
    "/tasks/{id}/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "cancelTaskUsingPUT_1",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Cancel task",
        "tags": [
          "task-controller"
        ]
      }
      },
    "/tasks/{id}/details/{taskDetailsId}": {
      "get": {
        "deprecated": false,
        "operationId": "getTaskDetailsUsingGET_1",
        "parameters": [
          {
            "description": "X-RateLimit-App",
            "in": "header",
            "name": "X-RateLimit-App",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "taskDetailsId",
            "in": "path",
            "name": "taskDetailsId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get task details",
        "tags": [
          "task-controller"
        ]
      }
      },
    "/v2/builds": {
      "get": {
        "deprecated": false,
        "description": "Deprecated, use the v3 endpoint instead",
        "operationId": "getBuildMastersUsingGET",
        "parameters": [
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get build masters",
        "tags": [
          "build-controller"
        ]
      }
      },
    "/v2/builds/{buildMaster}/build/{number}/**": {
      "get": {
        "deprecated": false,
        "description": "Deprecated, use the v3 endpoint instead",
        "operationId": "getBuildUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          },
          {
            "description": "number",
            "in": "path",
            "name": "number",
            "required": true,
            "type": "string"
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "type": "object"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get build for build master",
        "tags": [
          "build-controller"
        ]
      }
    },
    "/v2/builds/{buildMaster}/builds/**": {
      "get": {
        "deprecated": false,
        "description": "Deprecated, use the v3 endpoint instead",
        "operationId": "getBuildsUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get builds for build master",
        "tags": [
          "build-controller"
        ]
      }
      },
    "/v2/builds/{buildMaster}/jobs": {
      "get": {
        "deprecated": false,
        "description": "Deprecated, use the v3 endpoint instead",
        "operationId": "getJobsForBuildMasterUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get jobs for build master",
        "tags": [
          "build-controller"
        ]
      }
      },
    "/v2/builds/{buildMaster}/jobs/**": {
      "get": {
        "deprecated": false,
        "description": "Deprecated, use the v3 endpoint instead",
        "operationId": "getJobConfigUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get job config",
        "tags": [
          "build-controller"
        ]
      }
    },
    "/v2/canaries/canary": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "initiateCanaryWithConfigUsingPOST",
        "parameters": [
          {
            "description": "adhocExecutionRequest",
            "in": "body",
            "name": "adhocExecutionRequest",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "application",
            "in": "query",
            "name": "application",
            "required": false,
            "type": "string"
          },
          {
            "description": "metricsAccountName",
            "in": "query",
            "name": "metricsAccountName",
            "required": false,
            "type": "string"
          },
          {
            "description": "parentPipelineExecutionId",
            "in": "query",
            "name": "parentPipelineExecutionId",
            "required": false,
            "type": "string"
          },
          {
            "description": "storageAccountName",
            "in": "query",
            "name": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Start a canary execution with the supplied canary config",
        "tags": [
          "v-2-canary-controller"
        ]
      }
    },
    "/v2/canaries/canary/{canaryConfigId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "initiateCanaryUsingPOST",
        "parameters": [
          {
            "description": "application",
            "in": "query",
            "name": "application",
            "required": false,
            "type": "string"
          },
          {
            "description": "canaryConfigId",
            "in": "path",
            "name": "canaryConfigId",
            "required": true,
            "type": "string"
          },
          {
            "description": "configurationAccountName",
            "in": "query",
            "name": "configurationAccountName",
            "required": false,
            "type": "string"
          },
          {
            "description": "executionRequest",
            "in": "body",
            "name": "executionRequest",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "metricsAccountName",
            "in": "query",
            "name": "metricsAccountName",
            "required": false,
            "type": "string"
          },
          {
            "description": "parentPipelineExecutionId",
            "in": "query",
            "name": "parentPipelineExecutionId",
            "required": false,
            "type": "string"
          },
          {
            "description": "storageAccountName",
            "in": "query",
            "name": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Start a canary execution",
        "tags": [
          "v-2-canary-controller"
        ]
      }
    },
    "/v2/canaries/canary/{canaryConfigId}/{canaryExecutionId}": {
      "get": {
        "deprecated": true,
        "operationId": "getCanaryResultUsingGET",
        "parameters": [
          {
            "description": "canaryConfigId",
            "in": "path",
            "name": "canaryConfigId",
            "required": true,
            "type": "string"
          },
          {
            "description": "canaryExecutionId",
            "in": "path",
            "name": "canaryExecutionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageAccountName",
            "in": "query",
            "name": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "(DEPRECATED) Retrieve a canary result",
        "tags": [
          "v-2-canary-controller"
        ]
      }
    },
    "/v2/canaries/canary/{canaryExecutionId}": {
      "get": {
        "deprecated": false,
        "operationId": "getCanaryResultUsingGET_1",
        "parameters": [
          {
            "description": "canaryExecutionId",
            "in": "path",
            "name": "canaryExecutionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageAccountName",
            "in": "query",
            "name": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a canary result",
        "tags": [
          "v-2-canary-controller"
        ]
      }
    },
    "/v2/canaries/credentials": {
      "get": {
        "deprecated": false,
        "operationId": "listCredentialsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of configured Kayenta accounts",
        "tags": [
          "v-2-canary-controller"
        ]
      }
      },
    "/v2/canaries/judges": {
      "get": {
        "deprecated": false,
        "operationId": "listJudgesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of all configured canary judges",
        "tags": [
          "v-2-canary-controller"
        ]
      }
    },
    "/v2/canaries/metadata/metricsService": {
      "get": {
        "deprecated": false,
        "operationId": "listMetricsServiceMetadataUsingGET",
        "parameters": [
          {
            "description": "filter",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "metricsAccountName",
            "in": "query",
            "name": "metricsAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of descriptors for use in populating the canary config ui",
        "tags": [
          "v-2-canary-controller"
        ]
      }
    },
    "/v2/canaries/metricSetPairList/{metricSetPairListId}": {
      "get": {
        "deprecated": false,
        "operationId": "getMetricSetPairListUsingGET",
        "parameters": [
          {
            "description": "metricSetPairListId",
            "in": "path",
            "name": "metricSetPairListId",
            "required": true,
            "type": "string"
          },
          {
            "description": "storageAccountName",
            "in": "query",
            "name": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a metric set pair list",
        "tags": [
          "v-2-canary-controller"
        ]
      }
    },
    "/v2/canaries/{application}/executions": {
      "get": {
        "deprecated": false,
        "operationId": "getCanaryResultsByApplicationUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "path",
            "name": "application",
            "required": true,
            "type": "string"
          },
          {
            "description": "limit",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "integer"
          },
          {
            "allowEmptyValue": false,
            "description": "Comma-separated list of statuses, e.g.: RUNNING, SUCCEEDED, TERMINAL",
            "in": "query",
            "name": "statuses",
            "required": false,
            "type": "string"
          },
          {
            "description": "storageAccountName",
            "in": "query",
            "name": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of an application's canary results",
        "tags": [
          "v-2-canary-controller"
        ]
      }
    },
    "/v2/canaryConfig": {
      "get": {
        "deprecated": false,
        "operationId": "getCanaryConfigsUsingGET",
        "parameters": [
          {
            "description": "application",
            "in": "query",
            "name": "application",
            "required": false,
            "type": "string"
          },
          {
            "description": "configurationAccountName",
            "in": "query",
            "name": "configurationAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of canary configurations",
        "tags": [
          "v-2-canary-config-controller"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "createCanaryConfigUsingPOST",
        "parameters": [
          {
            "description": "config",
            "in": "body",
            "name": "config",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "configurationAccountName",
            "in": "query",
            "name": "configurationAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Create a canary configuration",
        "tags": [
          "v-2-canary-config-controller"
        ]
      }
    },
    "/v2/canaryConfig/{id}": {
      "delete": {
        "deprecated": false,
        "operationId": "deleteCanaryConfigUsingDELETE",
        "parameters": [
          {
            "description": "configurationAccountName",
            "in": "query",
            "name": "configurationAccountName",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "summary": "Delete a canary configuration",
        "tags": [
          "v-2-canary-config-controller"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "getCanaryConfigUsingGET",
        "parameters": [
          {
            "description": "configurationAccountName",
            "in": "query",
            "name": "configurationAccountName",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "type": "object"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Retrieve a canary configuration by id",
        "tags": [
          "v-2-canary-config-controller"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "updateCanaryConfigUsingPUT",
        "parameters": [
          {
            "description": "config",
            "in": "body",
            "name": "config",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "configurationAccountName",
            "in": "query",
            "name": "configurationAccountName",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "type": "object"
                }
              },
              "201": {
                "description": "Created"
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Update a canary configuration",
        "tags": [
          "v-2-canary-config-controller"
        ]
      }
    },
    "/v2/pipelineTemplates": {
      "get": {
        "deprecated": false,
        "operationId": "listUsingGET_1",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "scopes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "scopes",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "(ALPHA) List pipeline templates.",
        "tags": [
          "v-2-pipeline-templates-controller"
        ]
      }
    },
    "/v2/pipelineTemplates/create": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "createUsingPOST_1",
        "parameters": [
          {
            "description": "pipelineTemplate",
            "in": "body",
            "name": "pipelineTemplate",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "tag",
            "in": "query",
            "name": "tag",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "(ALPHA) Create a pipeline template.",
        "tags": [
          "v-2-pipeline-templates-controller"
        ]
      }
    },
    "/v2/pipelineTemplates/plan": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "planUsingPOST",
        "parameters": [
          {
            "description": "pipeline",
            "in": "body",
            "name": "pipeline",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "(ALPHA) Plan a pipeline template configuration.",
        "tags": [
          "v-2-pipeline-templates-controller"
        ]
      }
    },
    "/v2/pipelineTemplates/update/{id}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "updateUsingPOST_1",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "pipelineTemplate",
            "in": "body",
            "name": "pipelineTemplate",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "default": false,
            "description": "skipPlanDependents",
            "in": "query",
            "name": "skipPlanDependents",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "tag",
            "in": "query",
            "name": "tag",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "(ALPHA) Update a pipeline template.",
        "tags": [
          "v-2-pipeline-templates-controller"
        ]
      }
    },
    "/v2/pipelineTemplates/versions": {
      "get": {
        "deprecated": false,
        "operationId": "listVersionsUsingGET",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "scopes",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "scopes",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "List pipeline templates with versions",
        "tags": [
          "v-2-pipeline-templates-controller"
        ]
      }
    },
    "/v2/pipelineTemplates/{id}": {
      "delete": {
        "deprecated": false,
        "operationId": "deleteUsingDELETE_1",
        "parameters": [
          {
            "description": "application",
            "in": "query",
            "name": "application",
            "required": false,
            "type": "string"
          },
          {
            "description": "digest",
            "in": "query",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "tag",
            "in": "query",
            "name": "tag",
            "required": false,
            "type": "string"
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "202": {
                "description": "Accepted",
                "schema": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "type": "object"
                }
              },
              "204": {
                "description": "No Content"
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              }
            },
        "summary": "Delete a pipeline template.",
        "tags": [
          "v-2-pipeline-templates-controller"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "getUsingGET_2",
        "parameters": [
          {
            "description": "digest",
            "in": "query",
            "name": "digest",
            "required": false,
            "type": "string"
          },
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "tag",
            "in": "query",
            "name": "tag",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "(ALPHA) Get a pipeline template.",
        "tags": [
          "v-2-pipeline-templates-controller"
        ]
      }
      },
    "/v2/pipelineTemplates/{id}/dependents": {
      "get": {
        "deprecated": false,
        "operationId": "listPipelineTemplateDependentsUsingGET_1",
        "parameters": [
          {
            "description": "id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "(ALPHA) List all pipelines that implement a pipeline template",
        "tags": [
          "v-2-pipeline-templates-controller"
        ]
      }
      },
    "/v3/builds": {
      "get": {
        "deprecated": false,
        "operationId": "v3GetBuildMastersUsingGET",
        "parameters": [
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get build masters",
        "tags": [
          "build-controller"
        ]
      }
      },
    "/v3/builds/{buildMaster}/build/{number}": {
      "get": {
        "deprecated": false,
        "operationId": "v3GetBuildUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          },
          {
            "description": "job",
            "in": "query",
            "name": "job",
            "required": true,
            "type": "string"
          },
          {
            "description": "number",
            "in": "path",
            "name": "number",
            "required": true,
            "type": "string"
          }
            ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
               "200" : {
                 "description": "OK",
                 "schema": {
                   "additionalProperties": {
                     "type": "object"
                   },
                   "type": "object"
                 }
               },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get build for build master",
        "tags": [
          "build-controller"
        ]
      }
    },
    "/v3/builds/{buildMaster}/builds": {
      "get": {
        "deprecated": false,
        "operationId": "v3GetBuildsUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          },
          {
            "description": "job",
            "in": "query",
            "name": "job",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get builds for build master",
        "tags": [
          "build-controller"
        ]
      }
    },
    "/v3/builds/{buildMaster}/job": {
      "get": {
        "deprecated": false,
        "operationId": "v3GetJobConfigUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          },
          {
            "description": "job",
            "in": "query",
            "name": "job",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "additionalProperties": {
                "type": "object"
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get job config",
        "tags": [
          "build-controller"
        ]
      }
    },
    "/v3/builds/{buildMaster}/jobs": {
      "get": {
        "deprecated": false,
        "operationId": "v3GetJobsForBuildMasterUsingGET",
        "parameters": [
          {
            "description": "buildMaster",
            "in": "path",
            "name": "buildMaster",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Get jobs for build master",
        "tags": [
          "build-controller"
        ]
      }
      },
    "/version": {
      "get": {
        "deprecated": false,
        "operationId": "getVersionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Version"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Fetch Gate's current version",
        "tags": [
          "version-controller"
        ]
      }
    },
    "/vpcs": {
      "get": {
        "deprecated": true,
        "operationId": "vpcsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get VPCs",
        "tags": [
          "amazon-infrastructure-controller"
        ]
      }
    },
    "/webhooks/preconfigured": {
      "get": {
        "deprecated": false,
        "operationId": "preconfiguredWebhooksUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Retrieve a list of preconfigured webhooks in Orca",
        "tags": [
          "webhook-controller"
        ]
      }
    },
    "/webhooks/{type}/{source}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "deprecated": false,
        "operationId": "webhooksUsingPOST",
        "parameters": [
          {
            "description": "X-Event-Key",
            "in": "header",
            "name": "X-Event-Key",
            "required": false,
            "type": "string"
          },
          {
            "description": "X-Hub-Signature",
            "in": "header",
            "name": "X-Hub-Signature",
            "required": false,
            "type": "string"
          },
          {
            "description": "event",
            "in": "body",
            "name": "event",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "source",
            "in": "path",
            "name": "source",
            "required": true,
            "type": "string"
          },
          {
            "description": "type",
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
            "produces" : [
               "*/*"
            ],
            "responses" : {
              "200": {
                "description": "OK",
                "schema": {
                  "type": "object"
                }
              },
              "201": {
                "description": "Created"
              },
              "401": {
                "description": "Unauthorized"
              },
              "403": {
                "description": "Forbidden"
              },
              "404": {
                "description": "Not Found"
              }
            },
        "summary": "Endpoint for posting webhooks to Spinnaker's webhook service",
        "tags": [
          "webhook-controller"
        ]
      }
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Amazon Infrastructure Controller",
      "name": "amazon-infrastructure-controller"
    },
    {
      "description": "Application Controller",
      "name": "application-controller"
    },
    {
      "description": "Artifact Controller",
      "name": "artifact-controller"
    },
    {
      "description": "Auth Controller",
      "name": "auth-controller"
    },
    {
      "description": "Bake Controller",
      "name": "bake-controller"
    },
    {
      "description": "Build Controller",
      "name": "build-controller"
    },
    {
      "description": "Ci Controller",
      "name": "ci-controller"
    },
    {
      "description": "Cluster Controller",
      "name": "cluster-controller"
    },
    {
      "description": "Concourse Controller",
      "name": "concourse-controller"
    },
    {
      "description": "Credentials Controller",
      "name": "credentials-controller"
    },
    {
      "description": "Deck Plugins Controller",
      "name": "deck-plugins-controller"
    },
    {
      "description": "Ecs Server Group Events Controller",
      "name": "ecs-server-group-events-controller"
    },
    {
      "description": "Executions Controller",
      "name": "executions-controller"
    },
    {
      "description": "Firewall Controller",
      "name": "firewall-controller"
    },
    {
      "description": "Image Controller",
      "name": "image-controller"
    },
    {
      "description": "Instance Controller",
      "name": "instance-controller"
    },
    {
      "description": "Job Controller",
      "name": "job-controller"
    },
    {
      "description": "Load Balancer Controller",
      "name": "load-balancer-controller"
    },
    {
      "description": "Managed Controller",
      "name": "managed-controller"
    },
    {
      "description": "Network Controller",
      "name": "network-controller"
    },
    {
      "description": "Pipeline Config Controller",
      "name": "pipeline-config-controller"
    },
    {
      "description": "Pipeline Controller",
      "name": "pipeline-controller"
    },
    {
      "description": "Pipeline Templates Controller",
      "name": "pipeline-templates-controller"
    },
    {
      "description": "Plugin Info Controller",
      "name": "plugin-info-controller"
    },
    {
      "description": "Plugin Publish Controller",
      "name": "plugin-publish-controller"
    },
    {
      "description": "Plugins Installed Controller",
      "name": "plugins-installed-controller"
    },
    {
      "description": "Project Controller",
      "name": "project-controller"
    },
    {
      "description": "Pubsub Subscription Controller",
      "name": "pubsub-subscription-controller"
    },
    {
      "description": "Reorder Pipelines Controller",
      "name": "reorder-pipelines-controller"
    },
    {
      "description": "Search Controller",
      "name": "search-controller"
    },
    {
      "description": "Security Group Controller",
      "name": "security-group-controller"
    },
    {
      "description": "Server Group Controller",
      "name": "server-group-controller"
    },
    {
      "description": "Server Group Manager Controller",
      "name": "server-group-manager-controller"
    },
    {
      "description": "Snapshot Controller",
      "name": "snapshot-controller"
    },
    {
      "description": "Subnet Controller",
      "name": "subnet-controller"
    },
    {
      "description": "Task Controller",
      "name": "task-controller"
    },
    {
      "description": "V 2 Canary Config Controller",
      "name": "v-2-canary-config-controller"
    },
    {
      "description": "V 2 Canary Controller",
      "name": "v-2-canary-controller"
    },
    {
      "description": "V 2 Pipeline Templates Controller",
      "name": "v-2-pipeline-templates-controller"
    },
    {
      "description": "Version Controller",
      "name": "version-controller"
    },
    {
      "description": "Webhook Controller",
      "name": "webhook-controller"
    }
  ]
}
