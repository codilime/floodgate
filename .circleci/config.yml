version: 2.1

aliases:
  latest-gate-version: &default-gate-version
    gate_api_branch:
      type: string
      default: release-1.20.x
  supported-spinnaker-releases: &gate-versions
    gate_api_branch: [ "release-1.20.x", "release-1.19.x", "release-1.18.x" ]
  supported-client-os: &build-os-type
    build_os: [ "linux", "darwin" ]
  release-filters: &filters-release
    filters:
      branches:
        only:
          - /release-v[0-9]+\.[0-9]+\.x/
      tags:
        only:
         - /v[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)?/

commands:
  install_toolset:
    description: "Install needed extra tools"
    steps:
      - run:
          name: Install tools
          command: .cilibs/install_toolset.sh
    
  wait_for_dpkg:
    description: "Wait for packaging operations to finish"
    steps:
      - run:
          name: Wait for packaging operations to finish
          command: .cilibs/wait_for_dpkg.sh

jobs:
  generate_swagger:
    parameters: *default-gate-version
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - run:
          name: Prepare extra directories
          command: sudo .cilibs/prepare_extra_directories.sh 
      - run:
          name: Setup swagger
          command: .cilibs/setup_swagger.sh << parameters.gate_api_branch >> 
      - persist_to_workspace:
          root: /floodgate
          paths:
            - gate-swagger.json
            - gateapi
      - store_artifacts:
          path: /floodgate/gate/swagger/gate-swagger.json
          destination: gate-swagger.json

  build:
    parameters: 
      <<: *default-gate-version
      build_os:
        type: string
        default: linux
      build_arch:
        type: string
        default: amd64
      send_coverity:
        type: enum
        default: send
        enum: ["send", "dont-send"]
    docker:
      - image: circleci/golang:1.14.1
        environment:
          GO111MODULE: "on"
    working_directory: /go/src/github.com/codilime/floodgate
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: Remove gateapi dir
          command: rm -r gateapi
      - attach_workspace:
          at: ./
      - run:
          name: Get dependencies
          command: .cilibs/get_dependencies.sh
      - run: 
          name: Examine source code with go vet
          command: .cilibs/examine_source_code_with_go_get.sh
      - run: 
          name: Execute go tests
          command: .cilibs/execute_go_tests.sh
      - run:
          name: Compile code
          command: .cilibs/compile_code.sh -o << parameters.build_os >> -a << parameters.build_arch >> -g << parameters.gate_api_branch >>
      - run:
          name: Calculate code coverage
          environment:
            REQUIREDCODECOVERAGE: 60
          command: .cilibs/calculate_code_coverage.sh << parameters.send_coverity >>
      - run:
          name: Check linting
          command: .cilibs/check_linting.sh
      - run:
          name: Copy binaries for later use
          command: sudo .cilibs/copy_binaries_for_later_use.sh
      - run:
          name: Generate checksum
          command: .cilibs/generate_checksum.sh -o << parameters.build_os >> -a << parameters.build_arch >> -g << parameters.gate_api_branch >>
      - persist_to_workspace:
          root: /floodgate/bin
          paths:
            - floodgate
      - store_artifacts:
          path: /go/src/github.com/codilime/floodgate/floodgate
          destination: floodgate-<< parameters.gate_api_branch >>.<< parameters.build_os >>.<< parameters.build_arch >>
      - store_artifacts:
          path: /go/src/github.com/codilime/floodgate/floodgate-<< parameters.gate_api_branch >>.<< parameters.build_os >>.<< parameters.build_arch >>.sha1sum
          destination: floodgate-<< parameters.gate_api_branch >>.<< parameters.build_os >>.<< parameters.build_arch >>.sha1sum

  start_spinnaker:
    parameters: 
      <<: *default-gate-version
      floodgate_extra_params:
        type: string
        default: ""
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - checkout
      - run:
          name: Update submodules - sponnet
          command: git submodule init && git submodule update
      - attach_workspace:
          at: ./
      - run:
          name: Prepare directories
          command: .cilibs/prepare_directories.sh 
      - install_toolset
      - run:
          name: Update /etc/hosts
          command: .cilibs/update_hosts.sh
      - wait_for_dpkg
      - run:
          name: Install Spinnaker and configure Floodgate       
          command: .cilibs/install_spinnaker_and_configure_floodgate.sh << parameters.gate_api_branch >>
      - run:
          name: Test Floodgate against running Spinnaker instance
          command: .cilibs/test_floodgate_against_running_spinnaker_instance.sh << parameters.floodgate_extra_params >>

workflows:
  periodic:
    triggers:
      - schedule:
          cron: "15 2 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - generate_swagger:
          name: generate swagger api << matrix.gate_api_branch >>
          matrix:
            parameters: *gate-versions
      - build:
          name: build for << matrix.build_os >> against gate << matrix.gate_api_branch >>
          build_arch: amd64
          send_coverity: dont-send
          matrix:
            parameters:
              <<: *gate-versions
              <<: *build-os-type
          requires:
            - generate swagger api << matrix.gate_api_branch >>
      - start_spinnaker:
          name: test floodgate with working spinnaker << matrix.gate_api_branch >>
          matrix:
            parameters: *gate-versions
          requires:
            - build for linux against gate << matrix.gate_api_branch >>

  release:
    jobs:
      - generate_swagger:
          <<: *filters-release
          name: generate swagger api << matrix.gate_api_branch >>
          matrix:
            parameters: *gate-versions

      - build:
          <<: *filters-release
          name: build for << matrix.build_os >> against gate << matrix.gate_api_branch >>
          build_arch: amd64
          send_coverity: dont-send
          matrix:
            parameters:
              <<: *gate-versions
              <<: *build-os-type
          requires:
            - generate swagger api << matrix.gate_api_branch >>
      - start_spinnaker:
          <<: *filters-release
          name: test floodgate with working spinnaker << matrix.gate_api_branch >>
          matrix:
            parameters: *gate-versions
          requires:
            - build for linux against gate << matrix.gate_api_branch >>

  commit:
    jobs:
      - generate_swagger:
          name: generate swagger api
      - build:
          name: build
          requires:
            - generate swagger api
      - start_spinnaker:
          name: test floodgate with working spinnaker
          floodgate_extra_params: "-q"
          requires:
            - build
