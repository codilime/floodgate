# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
jobs:
  generate_swagger:
    parameters:
      gate_api_branch:
        type: string
        default: release-1.19.x
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - run:
          name: Prepare extra dirrectories
          command: |
            sudo mkdir /floodgate
            sudo chmod 777 /floodgate
            mkdir /floodgate/bin
      - run:
          name: Setup swagger-codegen
          command: |
            SWAGGER_VERSION=$(cat gateapi/.swagger-codegen/VERSION)
            wget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/${SWAGGER_VERSION}/swagger-codegen-cli-${SWAGGER_VERSION}.jar -O swagger-codegen-cli.jar
            wget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/${SWAGGER_VERSION}/swagger-codegen-cli-${SWAGGER_VERSION}.jar.sha1 -O swagger-codegen-cli.jar.sha1
            echo ' swagger-codegen-cli.jar' >> swagger-codegen-cli.jar.sha1
            sha1sum -c swagger-codegen-cli.jar.sha1 
            mv swagger-codegen-cli.jar /floodgate/bin/
      - run:
          name: Get gate code
          command: git clone https://github.com/spinnaker/gate.git -b << parameters.gate_api_branch >> /floodgate/gate
      - run:
          name: Generate swagger.json
          command: |
            cd /floodgate/gate
            ./swagger/generate_swagger.sh
            cp ./swagger/swagger.json ./gate-swagger.json
      - run:
          name: Generate gateapi go code
          command: java -jar /floodgate/bin/swagger-codegen-cli.jar generate -l go -i /floodgate/gate/gate-swagger.json -o /floodgate/gateapi
      - persist_to_workspace:
          root: /floodgate
          paths:
            - gate-swagger.json
            - gateapi
      - store_artifacts:
          path: /floodgate/gate/swagger/gate-swagger.json
          destination: gate-swagger.json

  build:
    parameters:
      gate_api_branch:
        type: string
        default: release-1.19.x
    docker:
      - image: circleci/golang:1.14.1
        environment:
          GO111MODULE: "on"
    working_directory: /go/src/github.com/codilime/floodgate
    steps:
      - checkout
      - run:
          name: Remove gateapi dir
          command: rm -r gateapi
      - attach_workspace:
          at: ./
      - run: 
          name: Get dependencies
          command: |
            go mod download
            go get -u golang.org/x/lint/golint
      - run: 
          name: Examine source code with go vet
          command: go vet -v ./...
      - run: 
          name: Execute go tests
          command: go test -v ./...
      - run:
          name: Compile code
          command: go build
      - run:
          name: Check linting
          command: |
            for GOSRCFILE in $( find . -type f -name '*.go' -not -path './gateapi/*')
            do
              golint -set_exit_status $GOSRCFILE
            done
      - store_artifacts:
          path: /go/src/github.com/codilime/floodgate/floodgate
          destination: floodgate-<< parameters.gate_api_branch >>

workflows:
  periodic:
    triggers:
      - schedule:
          cron: "15 2 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - generate_swagger:
          name: generate swagger api << matrix.gate_api_branch >>
          matrix:
            parameters:
              gate_api_branch: [ "release-1.19.x", "release-1.18.x", "release-1.17.x" ]
      - build:
          name: build against gate << matrix.gate_api_branch >>
          matrix:
            parameters:
              gate_api_branch: [ "release-1.19.x", "release-1.18.x", "release-1.17.x" ]
          requires:
            - generate swagger api << matrix.gate_api_branch >>
  commit:
    jobs:
      - generate_swagger:
          name: generate swagger api
      - build:
          name: build against gate
          requires:
            - generate swagger api
